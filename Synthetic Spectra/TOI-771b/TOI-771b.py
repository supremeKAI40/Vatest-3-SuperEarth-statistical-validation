import numpy as np
import matplotlib.pyplot as plt
import sys
import pandas as pd
from platon.transit_depth_calculator import TransitDepthCalculator
from platon.constants import M_jup, R_sun, R_jup
from platon.abundance_getter import AbundanceGetter
getter = AbundanceGetter()
# Solar logZ and C/O ratio. Modify as required.
abundances = getter.get(0.3, 1.5)

# Zero out CO.  (Note that if CO is a major component, you should probably
# renormalize the abundances of other species so that they add up to 1.)


# All quantities in SI
Rs = 0.241857 * R_sun     #Radius of star
Mp = 0.00877061569608382496 * M_jup     #Mass of planet
Rp = 0.1268204952609958969 * R_jup      #Radius of planet
T = 590.101494500507             #Temperature of isothermal part of the atmosphere
#plt.figure(figsize=(15,9))
for i in range(0,2):
    if i==0:
        #create a TransitDepthCalculator object and compute wavelength dependent transit depths
        depth_calculator = TransitDepthCalculator(method="ktables") #put "xsec" for opacity sampling
        wavelengths, transit_depths = depth_calculator.compute_depths(
            Rs, Mp, Rp, T, logZ=None, CO_ratio=None, add_collisional_absorption=True, cloudtop_pressure=1e4, 
            custom_abundances=abundances )
        
        # Uncomment the code below to print
        
        #print("#Wavelength(m)       Depth")
        #for i in range(len(wavelengths)):
        #    print(wavelengths[i], transit_depths[i])
        
        # Uncomment the code below to plot
        plt.plot(1e6*wavelengths, transit_depths, color='red',label="logZ=0.3; C/O=0.4")
    else:
        # influence
        #abundances["Na"] *= 0
        #abundances["K"] *= 0    
       
        #abundances["CO"] *= 0
        abundances["CO2"] *= 0.05
        
        abundances["H2O"] *= 0.6
        abundances["H2S"] *= 0
        
        #abundances["MgH"] *= 0
        #abundances["TiO"] *= 0
        #abundances["VO"] *= 0
       
        abundances["CH4"] *= 0.2
        
        #abundances["HCl"] *= 0
        #abundances["HCN"] *= 0
        #abundances["HF"] *= 0
    
        abundances["NH3"] *= 0.15
        #abundances["OCS"] *= 0
        #abundances["OH"] *= 0
        
        #abundances["PH3"] *= 0
        
        #abundances["SiO"] *= 0
        
        #abundances["C2H2"] *= 0
        #abundances["C2H4"] *= 0
        #abundances["C2H6"] *= 0
        
        #abundances["H2CO"] *= 0
        
        #abundances["N2"] *= 0
        #abundances["NO"] *= 0
        #abundances["NO2"] *= 0
        
        #abundances["O2"] *= 0
        #abundances["O3"] *= 0
        
        #abundances["SH"] *= 0
        #abundances["SO2"] *= 0
    
        #abundances["SiH"] *= 0
        
        #create a TransitDepthCalculator object and compute wavelength dependent transit depths
        depth_calculator = TransitDepthCalculator(method="ktables") #put "xsec" for opacity sampling
        wavelengths, transit_depths = depth_calculator.compute_depths(
            Rs, Mp, Rp, T, T_star=3306.0, logZ=None, CO_ratio=None, 
            add_gas_absorption=True, add_scattering=True, 
            scattering_factor=1, scattering_slope=4, 
            scattering_ref_wavelength=1e-06, add_collisional_absorption=True, 
            cloudtop_pressure=1e4, 
                custom_abundances=abundances )
        
        # Uncomment the code below to print
        
        #print("#Wavelength(m)       Depth")
        #for i in range(len(wavelengths)):
        #    print(wavelengths[i], transit_depths[i])
        
        # Uncomment the code below to plot
        #plt.plot(1e6*wavelengths, transit_depths, color="red",label="no $CH_4; H_2O$")
#plt.xlim(0,1) 
plt.title("Transmission Spectrum for TOI-771 b", size=20)       
plt.xlabel("Wavelength ($\u03BC$m)", size=20)
plt.ylabel("Transit depth", size=20)
#plt.xlim(1.0,5.5)#plt.grid()
plt.xlim(0.8,10.0)

#plt.show()


#10 channels HST G141
binwave=np.array([1.1515, 1.204 , 1.256 , 1.3085, 1.3615, 1.414 , 1.466 , 1.5185,
       1.5715, 1.624 ])
binspec=np.array([0.00352147, 0.00337846, 0.00316254, 0.00327065, 0.00362606,
       0.00360261, 0.00353897, 0.00343501, 0.00336583, 0.00359523])
error=4.790290652857819e-05
plt.errorbar(binwave,binspec,yerr=error,fmt='o')
#plt.xlim(1,2)
#plt.ylim(0.0025,0.0045)



'''
#25 channels HST G141
binwave=np.array([1.1355, 1.1565, 1.1775, 1.1985, 1.2195, 1.2405, 1.2615, 1.2825,
       1.3035, 1.3245, 1.3455, 1.3665, 1.3875, 1.4085, 1.4295, 1.4505,
       1.4715, 1.4925, 1.5135, 1.5345, 1.5555, 1.5765, 1.5975, 1.6185,
       1.6395])
binspec=np.array([0.00351343, 0.00370237, 0.00366736, 0.00338534, 0.00323044,
       0.00318458, 0.0031449 , 0.00331699, 0.00330206, 0.00340127,
       0.00358464, 0.00362876, 0.00361398, 0.00368868, 0.00363366,
       0.0036383 , 0.00357144, 0.00361058, 0.00349541, 0.00340721,
       0.00344001, 0.00329082, 0.00338286, 0.00365405, 0.00362336])
error=7.57411455862284e-05
plt.errorbar(binwave,binspec,yerr=error,fmt='o')
plt.xlim(1,2)
plt.ylim(0.0025,0.0045)
'''



#10 channels HST G102
binwave=np.array([0.8545, 0.8835, 0.9125, 0.9415, 0.9705, 0.9995, 1.0285, 1.0575,
       1.0865, 1.1155])
binspec=np.array([0.00316723, 0.00333802, 0.00336153, 0.00345434, 0.00340762,
       0.00331074, 0.00318959, 0.00314283, 0.00330923, 0.00349471])
error=5.936252619834117e-05
plt.errorbar(binwave,binspec,yerr=error,fmt='o')
#plt.xlim(0.8,10)
#plt.ylim(0.0025,0.0045)



'''
#25 channels HST G102
binwave=np.array([0.846 , 0.8575, 0.869 , 0.8805, 0.892 , 0.904 , 0.9155, 0.927 ,
       0.9385, 0.95  , 0.962 , 0.9735, 0.985 , 0.9965, 1.008 , 1.02  ,
       1.0315, 1.043 , 1.0545, 1.066 , 1.078 , 1.0895, 1.101 , 1.1125,
       1.124 ])
binspec=np.array([0.0031949 , 0.00327194, 0.0031596 , 0.00339468, 0.0033641 ,
       0.0035085 , 0.00331102, 0.00348075, 0.00346839, 0.00351126,
       0.0032893 , 0.00344381, 0.00333156, 0.00339627, 0.00312885,
       0.00324205, 0.00318596, 0.00298587, 0.00322273, 0.00326225,
       0.00315077, 0.00329309, 0.0034077 , 0.00326318, 0.00351135])
error=9.38603952240872e-05
plt.errorbar(binwave,binspec,yerr=error,fmt='o')
plt.xlim(0.8,2)
plt.ylim(0.0025,0.0045)
'''




'''
# 1 pixel JWST MIRI Slitless
wave=np.array([ 5.02130308,  5.10377501,  5.18354472,  5.25377623,  5.32088878,
        5.39363943,  5.45868775,  5.52217553,  5.58581102,  5.64489978,
        5.70166627,  5.76054382,  5.81761053,  5.87385801,  5.92747273,
        5.97918154,  6.02969154,  6.07838854,  6.12815972,  6.18070837,
        6.22839621,  6.2755012 ,  6.32178685,  6.36736704,  6.4125118 ,
        6.45781223,  6.50218969,  6.54435411,  6.58450347,  6.62709852,
        6.67231228,  6.71392851,  6.756062  ,  6.7974904 ,  6.83724934,
        6.87540668,  6.91482968,  6.95402433,  6.99280185,  7.03160299,
        7.07080224,  7.10889719,  7.14609387,  7.18312933,  7.2203493 ,
        7.25870305,  7.29574517,  7.33155717,  7.36530218,  7.40058047,
        7.43659311,  7.47264985,  7.50783787,  7.54299865,  7.57775646,
        7.6120194 ,  7.64592788,  7.67968056,  7.71326671,  7.74675721,
        7.78001576,  7.81301605,  7.84593131,  7.87862715,  7.91106167,
        7.94383764,  7.97614071,  8.00803282,  8.03972987,  8.07124642,
        8.1025873 ,  8.13371319,  8.16460467,  8.19542261,  8.22609922,
        8.25709679,  8.28750033,  8.31766535,  8.34796359,  8.37785224,
        8.40754947,  8.43714565,  8.46660153,  8.49583071,  8.52492967,
        8.55427688,  8.58308555,  8.61171598,  8.63973488,  8.66793537,
        8.69611365,  8.72462266,  8.75360217,  8.78152707,  8.80916296,
        8.83659443,  8.8638887 ,  8.89111046,  8.9181866 ,  8.94508399,
        8.97186887,  8.99857351,  9.02519803,  9.05180641,  9.07812324,
        9.10436569,  9.13083442,  9.15743657,  9.18325539,  9.20895341,
        9.2336791 ,  9.2581781 ,  9.2834826 ,  9.30880238,  9.33431205,
        9.35991344,  9.38479927,  9.4095977 ,  9.43442944,  9.45907728,
        9.48352764,  9.50792219,  9.53299235,  9.55772826,  9.58175268,
        9.60566902,  9.62910127,  9.65227877,  9.6758303 ,  9.69935247,
        9.72255361,  9.7455964 ,  9.76882927,  9.79197204,  9.81520327,
        9.83892425,  9.86185393,  9.88462637,  9.90731604,  9.92996749,
        9.95252397,  9.97495129,  9.99728913, 10.01962384, 10.04218982,
       10.06432167, 10.08633002, 10.10817324, 10.12965725, 10.15123915,
       10.17296991, 10.19455601, 10.21624954, 10.23815485, 10.25959854,
       10.2808702 , 10.30216557, 10.3234877 , 10.34474483, 10.36583706,
       10.3867588 , 10.40765835, 10.42863877, 10.44945915, 10.47011209,
       10.49079925, 10.51132238, 10.5317333 , 10.55213068, 10.57256178,
       10.59284189, 10.61314646, 10.63339902, 10.65359291, 10.67364657,
       10.69370595, 10.71395816, 10.73447013, 10.75450951, 10.7743235 ,
       10.79402632, 10.8137081 , 10.83210977, 10.85151702, 10.87104515,
       10.89053055, 10.91045561, 10.93038627, 10.94992046, 10.96918846,
       10.98841016, 11.00766947, 11.02698458, 11.04609562, 11.06516843,
       11.08413915, 11.10312397, 11.12166909, 11.14037239, 11.15913081,
       11.17792627, 11.1967021 , 11.21575714, 11.23462661, 11.25320928,
       11.2717814 , 11.29027663, 11.30883541, 11.32741796, 11.34581171,
       11.36414554, 11.38245145, 11.40071679, 11.41877789, 11.4369266 ,
       11.45503111, 11.47316613, 11.49120357, 11.50925704, 11.52725695,
       11.54520619, 11.56315214, 11.58100548, 11.59895681, 11.61708843,
       11.63497963, 11.65270118, 11.67038535, 11.68803224, 11.70555913,
       11.72286518, 11.74034928, 11.75784746, 11.77530901, 11.79277108,
       11.81031759, 11.82783357, 11.84519072, 11.86247047, 11.87971405,
       11.89692147, 11.91440638, 11.931712  , 11.94878371, 11.9658899 ,
       11.98292009, 11.9998133 , 12.01596768, 12.03288828, 12.04977123,
       12.06661857, 12.08347127, 12.10048868, 12.11775946, 12.13460249,
       12.15127243, 12.16790665, 12.18450516, 12.20106794, 12.21754554,
       12.23398636, 12.25048892, 12.26686166, 12.28328938, 12.29957527,
       12.3156985 , 12.33192815, 12.34816864, 12.36437274, 12.38049267,
       12.39685337, 12.41358562, 12.42967801, 12.44565656, 12.46169016,
       12.47764207, 12.49347852, 12.50905092, 12.52469729, 12.54052868,
       12.55627652, 12.57204066, 12.58773031, 12.60358465, 12.61955444,
       12.63517677, 12.6507068 , 12.66625064, 12.68171525, 12.69716493,
       12.71251202, 12.72790812, 12.74326251, 12.75853787, 12.7738285 ,
       12.78905383, 12.80415416, 12.81925831, 12.83438769, 12.84948195,
       12.86454124, 12.87956564, 12.89459099, 12.90966006, 12.92459009,
       12.93950709, 12.95431757, 12.96913506, 12.98392937, 12.99880762,
       13.01393356, 13.02861537, 13.04325502, 13.0578406 , 13.07246308,
       13.08694553, 13.10122713, 13.11555645, 13.1299845 , 13.14444758,
       13.15884001, 13.17320149, 13.18754529, 13.2021331 , 13.21645164,
       13.23064263, 13.24490305, 13.25908538, 13.27323872, 13.28736385,
       13.30165357, 13.3158296 , 13.3298249 , 13.34384136, 13.35783345,
       13.37184448, 13.38573365, 13.39959566, 13.41339363, 13.42726158,
       13.44110657, 13.45492892, 13.46868036, 13.48250569, 13.49635982,
       13.51010487, 13.52382383, 13.537524  , 13.55120616, 13.56487094,
       13.57851903, 13.5921512 , 13.60584918, 13.61943096, 13.63300983,
       13.64662454, 13.66016243, 13.67370329, 13.68728226, 13.70090112,
       13.714419  , 13.7279577 , 13.74148323, 13.75495335, 13.7684749 ,
       13.78198715, 13.79562483, 13.80925046, 13.8227696 , 13.83626408,
       13.84976071, 13.86326073])
spectrum=np.array([0.00365422, 0.00348182, 0.00340906, 0.00342253, 0.00375962,
       0.00345542, 0.00383444, 0.00360459, 0.00366278, 0.00388873,
       0.00357896, 0.00399656, 0.00379134, 0.00400501, 0.00355167,
       0.00359628, 0.00359268, 0.00358475, 0.00372294, 0.00375757,
       0.00355921, 0.00361546, 0.00368671, 0.00364094, 0.00409505,
       0.00377696, 0.00378925, 0.00375621, 0.00357025, 0.00371888,
       0.00380478, 0.00364958, 0.00354059, 0.00359593, 0.0038737 ,
       0.00361932, 0.00355833, 0.00355931, 0.00369167, 0.00353031,
       0.00387935, 0.00356661, 0.00376229, 0.00368815, 0.00395034,
       0.00361001, 0.00371563, 0.0036566 , 0.00399168, 0.0038501 ,
       0.00391258, 0.00379922, 0.00367826, 0.00363238, 0.00381099,
       0.00369304, 0.00368364, 0.00370519, 0.00408769, 0.00433363,
       0.00367058, 0.00399762, 0.00369237, 0.00397225, 0.00375048,
       0.00366726, 0.00390869, 0.00375291, 0.00366035, 0.00358698,
       0.00371185, 0.00398663, 0.00390008, 0.0039187 , 0.00356333,
       0.00383992, 0.00382538, 0.00381728, 0.003591  , 0.0036542 ,
       0.00373803, 0.00386319, 0.00365235, 0.00375577, 0.00408351,
       0.00373678, 0.00356766, 0.00363323, 0.00370424, 0.00356904,
       0.00375211, 0.00351183, 0.00353681, 0.00347484, 0.00354155,
       0.00352566, 0.00341875, 0.00347011, 0.00358156, 0.00349015,
       0.00360821, 0.00349348, 0.00373204, 0.00344559, 0.00347481,
       0.00341561, 0.00368024, 0.00350904, 0.00346956, 0.00351489,
       0.00342207, 0.00339702, 0.00342346, 0.00390948, 0.00346863,
       0.00344213, 0.0036392 , 0.00343564, 0.00341864, 0.00338825,
       0.00352178, 0.00347542, 0.00344908, 0.00361013, 0.00345198,
       0.00343423, 0.00338281, 0.00339944, 0.00350923, 0.00342759,
       0.00342159, 0.00341666, 0.00338596, 0.00334069, 0.0033455 ,
       0.00337115, 0.00341292, 0.00405613, 0.00341764, 0.00350721,
       0.00336046, 0.00335823, 0.00345314, 0.00335738, 0.00336116,
       0.00343323, 0.00348731, 0.00350691, 0.00337239, 0.00334075,
       0.00334187, 0.00334097, 0.00349142, 0.00335743, 0.00337251,
       0.00340857, 0.00342187, 0.00346172, 0.00357347, 0.00363197,
       0.00359454, 0.00354165, 0.00363082, 0.00348321, 0.00351104,
       0.00346611, 0.00347902, 0.00351863, 0.0034381 , 0.00350513,
       0.00346887, 0.00341909, 0.00345966, 0.00356298, 0.00357828,
       0.00349429, 0.00355875, 0.00358522, 0.0037523 , 0.00366306,
       0.00349317, 0.00349561, 0.00347408, 0.00352121, 0.00344289,
       0.00345566, 0.00371028, 0.00383676, 0.00345122, 0.00354058,
       0.00345471, 0.0035209 , 0.00343796, 0.00341516, 0.00348055,
       0.00339741, 0.00347385, 0.00335845, 0.00347141, 0.00340216,
       0.00343424, 0.00341561, 0.00347028, 0.00345576, 0.00348045,
       0.0034779 , 0.00343539, 0.00336008, 0.00342111, 0.00334599,
       0.00341306, 0.00343604, 0.00344411, 0.00333641, 0.00335735,
       0.00344554, 0.00351266, 0.00338966, 0.00345133, 0.00356923,
       0.0034197 , 0.00343728, 0.00337012, 0.00336522, 0.00341488,
       0.00342609, 0.00340733, 0.00336966, 0.00338686, 0.00347256,
       0.00356596, 0.00348798, 0.00344186, 0.00341797, 0.00375029,
       0.0034456 , 0.00339457, 0.00341556, 0.00342426, 0.00338183,
       0.00340039, 0.00335355, 0.00337421, 0.00348622, 0.00346377,
       0.00347753, 0.00342797, 0.00344633, 0.00345245, 0.00341264,
       0.00342963, 0.00378098, 0.00352002, 0.00342403, 0.00335932,
       0.00345594, 0.0033567 , 0.00341349, 0.00352635, 0.00338457,
       0.00341204, 0.0035054 , 0.00383469, 0.00351105, 0.00350225,
       0.0034944 , 0.00339135, 0.00350267, 0.00341033, 0.00353284,
       0.00355012, 0.00346718, 0.00351044, 0.00362785, 0.00342201,
       0.00340316, 0.003378  , 0.00343496, 0.0038568 , 0.00351986,
       0.00346497, 0.0034187 , 0.00349236, 0.00351317, 0.00338946,
       0.00343871, 0.00336845, 0.00338372, 0.00350764, 0.00349563,
       0.00352706, 0.00356055, 0.00347501, 0.00363357, 0.00350213,
       0.00343255, 0.00342188, 0.00345524, 0.0034588 , 0.00350089,
       0.00346532, 0.00347614, 0.00347312, 0.00339834, 0.00342207,
       0.0033635 , 0.00341629, 0.00347372, 0.00353683, 0.00338469,
       0.00352337, 0.00350934, 0.00351693, 0.00342051, 0.00345241,
       0.00345655, 0.00339411, 0.0034795 , 0.00350052, 0.00347996,
       0.0034185 , 0.00344366, 0.0034066 , 0.0033735 , 0.0035219 ,
       0.00350071, 0.00342052, 0.00342247, 0.00349372, 0.00345037,
       0.00344548, 0.00345757, 0.00341925, 0.00340216, 0.00350154,
       0.00345019, 0.00359414, 0.00343342, 0.00357559, 0.00362587,
       0.00350109, 0.00348793, 0.00350695, 0.00350461, 0.00344742,
       0.00344842, 0.00346047, 0.00344544, 0.00340222, 0.00344215,
       0.00347475, 0.00338   , 0.00351756, 0.00345772, 0.00337674,
       0.00346312, 0.00344226, 0.00339364, 0.00355615, 0.00338813,
       0.00360061, 0.00363904, 0.00351603, 0.00346147, 0.00345884,
       0.00345952, 0.00343132, 0.00349884, 0.00343948, 0.00339691,
       0.00342512, 0.00350355])
error=np.array([1.13635098e-04, 1.00877963e-04, 9.82153849e-05, 9.84601375e-05,
       9.99533807e-05, 1.01343809e-04, 1.02862188e-04, 1.04365301e-04,
       1.06958569e-04, 1.09626577e-04, 1.11655499e-04, 1.13740537e-04,
       1.14474313e-04, 1.13460004e-04, 1.13745346e-04, 1.16029965e-04,
       1.18998743e-04, 1.21229827e-04, 1.22007144e-04, 1.22170753e-04,
       1.22997373e-04, 1.24096233e-04, 1.24747443e-04, 1.25336961e-04,
       1.26798310e-04, 1.29673953e-04, 1.33457757e-04, 1.36746224e-04,
       1.38043445e-04, 1.37714821e-04, 1.38559160e-04, 1.42094287e-04,
       1.46086494e-04, 1.47581742e-04, 1.47679460e-04, 1.49045373e-04,
       1.51997676e-04, 1.55135726e-04, 1.57344914e-04, 1.59156532e-04,
       1.60833790e-04, 1.61365949e-04, 1.60637950e-04, 1.60295195e-04,
       1.60978999e-04, 1.62662639e-04, 1.64492600e-04, 1.66060959e-04,
       1.67961304e-04, 1.70490210e-04, 1.72963813e-04, 1.75248692e-04,
       1.77310228e-04, 1.79060920e-04, 1.80879976e-04, 1.83239776e-04,
       1.85865219e-04, 1.88577553e-04, 1.91029476e-04, 1.92633023e-04,
       1.94116335e-04, 1.96296547e-04, 1.98901576e-04, 2.00804433e-04,
       2.02364292e-04, 2.04178900e-04, 2.06282301e-04, 2.08842748e-04,
       2.12253522e-04, 2.16286219e-04, 2.19250142e-04, 2.19883036e-04,
       2.19581715e-04, 2.20189898e-04, 2.21836391e-04, 2.23733562e-04,
       2.25851235e-04, 2.27941794e-04, 2.29791974e-04, 2.31671232e-04,
       2.34326497e-04, 2.37500521e-04, 2.39718724e-04, 2.40260111e-04,
       2.40655642e-04, 2.42376574e-04, 2.44545653e-04, 2.45719594e-04,
       2.46005030e-04, 2.46616653e-04, 2.47998174e-04, 2.50104087e-04,
       2.52886921e-04, 2.56335891e-04, 2.59525364e-04, 2.61633648e-04,
       2.62919519e-04, 2.64219279e-04, 2.66399198e-04, 2.70252620e-04,
       2.75485560e-04, 2.80408866e-04, 2.83479736e-04, 2.85503288e-04,
       2.87670283e-04, 2.90426413e-04, 2.93377309e-04, 2.96255201e-04,
       2.98806780e-04, 3.01474815e-04, 3.04728984e-04, 3.08229232e-04,
       3.11550577e-04, 3.14618599e-04, 3.17902285e-04, 3.21840459e-04,
       3.27376949e-04, 3.33913841e-04, 3.38934986e-04, 3.41266208e-04,
       3.41860769e-04, 3.41915693e-04, 3.41891384e-04, 3.42627680e-04,
       3.45290810e-04, 3.49979067e-04, 3.56217726e-04, 3.63644652e-04,
       3.71825006e-04, 3.79478839e-04, 3.85130645e-04, 3.88999522e-04,
       3.92332998e-04, 3.95330221e-04, 3.97091380e-04, 3.97608224e-04,
       3.98362039e-04, 4.00578323e-04, 4.04628604e-04, 4.08979462e-04,
       4.13233161e-04, 4.17644505e-04, 4.23015869e-04, 4.30003042e-04,
       4.38446888e-04, 4.47230898e-04, 4.54746591e-04, 4.60510625e-04,
       4.65809302e-04, 4.71829126e-04, 4.78254744e-04, 4.83869438e-04,
       4.88160866e-04, 4.92002644e-04, 4.96593438e-04, 5.02975842e-04,
       5.10966551e-04, 5.19277011e-04, 5.27327379e-04, 5.36462471e-04,
       5.48257110e-04, 5.62666060e-04, 5.78735731e-04, 5.95815340e-04,
       6.11941514e-04, 6.24154946e-04, 6.31671515e-04, 6.37997678e-04,
       6.47243327e-04, 6.60196657e-04, 6.75399636e-04, 6.91127215e-04,
       7.05895327e-04, 7.18618846e-04, 7.30110030e-04, 7.42998452e-04,
       7.58832696e-04, 7.76541499e-04, 7.93594975e-04, 8.08562247e-04,
       8.21056046e-04, 8.31865145e-04, 8.43024477e-04, 8.55805011e-04,
       8.69543326e-04, 8.82778553e-04, 8.95593208e-04, 9.08768891e-04,
       9.21948333e-04, 9.34924264e-04, 9.51565714e-04, 9.75235592e-04,
       1.00364149e-03, 1.02837734e-03, 1.04383647e-03, 1.05437696e-03,
       1.06991808e-03, 1.09734396e-03, 1.13417295e-03, 1.17031123e-03,
       1.19471557e-03, 1.20594624e-03, 1.21262867e-03, 1.22452689e-03,
       1.24423183e-03, 1.26656737e-03, 1.28359323e-03, 1.29171409e-03,
       1.29569920e-03, 1.30470115e-03, 1.32243480e-03, 1.34407304e-03,
       1.36314034e-03, 1.38196975e-03, 1.40923381e-03, 1.44754005e-03,
       1.48760244e-03, 1.51823195e-03, 1.53801430e-03, 1.55421231e-03,
       1.57185599e-03, 1.59086537e-03, 1.61096800e-03, 1.63043239e-03,
       1.64412176e-03, 1.64913454e-03, 1.65292550e-03, 1.66968693e-03,
       1.70695678e-03, 1.75785075e-03, 1.80734817e-03, 1.84569461e-03,
       1.87688404e-03, 1.91433680e-03, 1.96813652e-03, 2.03607034e-03,
       2.09848403e-03, 2.13613928e-03, 2.15240741e-03, 2.17404238e-03,
       2.22484656e-03, 2.30564133e-03, 2.39809230e-03, 2.48567568e-03,
       2.56563466e-03, 2.63952536e-03, 2.70799125e-03, 2.78256588e-03,
       2.88921625e-03, 3.04138695e-03, 3.20593161e-03, 3.30984022e-03,
       3.31485904e-03, 3.26006448e-03, 3.21137594e-03, 3.19321354e-03,
       3.18848717e-03, 3.17034191e-03, 3.13621972e-03, 3.11046896e-03,
       3.12452814e-03, 3.19662949e-03, 3.31493161e-03, 3.43596838e-03,
       3.50672728e-03, 3.51800298e-03, 3.51318354e-03, 3.54477723e-03,
       3.63667849e-03, 3.77606476e-03, 3.92772237e-03, 4.05680676e-03,
       4.15292296e-03, 4.23893679e-03, 4.35479485e-03, 4.53339061e-03,
       4.78549852e-03, 5.07845049e-03, 5.32783719e-03, 5.44664895e-03,
       5.43519839e-03, 5.39765248e-03, 5.43565213e-03, 5.55665546e-03,
       5.67185811e-03, 5.68847135e-03, 5.62097633e-03, 5.56581055e-03,
       5.59331346e-03, 5.69637336e-03, 5.81333314e-03, 5.90559822e-03,
       6.01069413e-03, 6.20113702e-03, 6.49305569e-03, 6.76943952e-03,
       6.83557042e-03, 6.62801007e-03, 6.29715627e-03, 6.03018145e-03,
       5.91764104e-03, 5.97737505e-03, 6.22211366e-03, 6.67199404e-03,
       7.29275207e-03, 7.89630960e-03, 8.16793459e-03, 7.97702169e-03,
       7.55434751e-03, 7.21901227e-03, 7.13698166e-03, 7.32628147e-03,
       7.68728943e-03, 8.00789164e-03, 8.05542182e-03, 7.80220015e-03,
       7.48768859e-03, 7.40297724e-03, 7.73237533e-03, 8.52827830e-03,
       9.65408697e-03, 1.07183348e-02, 1.13329686e-02, 1.15413395e-02,
       1.16786206e-02, 1.19200882e-02, 1.21209892e-02, 1.19895461e-02,
       1.13969921e-02, 1.05010991e-02, 9.58348347e-03, 8.87866130e-03,
       8.54436440e-03, 8.67695324e-03, 9.31497921e-03, 1.03550348e-02,
       1.14313971e-02, 1.21199285e-02, 1.25086496e-02, 1.32819271e-02,
       1.53075354e-02, 1.96551300e-02, 2.75107951e-02, 3.71940997e-02,
       3.91337063e-02, 3.12936934e-02, 2.35829775e-02, 1.93273692e-02,
       1.77261270e-02, 1.75738378e-02, 1.75474692e-02, 1.67449791e-02,
       1.56433837e-02, 1.53136433e-02, 1.63169916e-02, 1.84256015e-02,
       2.01906913e-02, 1.99728286e-02, 1.84896368e-02, 1.74542100e-02,
       1.75074427e-02, 1.84324775e-02, 1.95549094e-02, 2.01294493e-02,
       1.98877546e-02, 1.91732663e-02, 1.86273642e-02, 1.89105987e-02,
       2.07338582e-02, 2.51564156e-02, 3.42667713e-02, 5.26696345e-02])
plt.plot(wave,spectrum,'.')
plt.xlim(0.8,10)
plt.ylim(0.0025,0.0045)
'''




# 5 pixel JWST MIRI Slitless
wave=np.array([ 5.02130308,  5.10377501,  5.18354472,  5.25377623,  5.32088878,
        5.39363943,  5.45868775,  5.52217553,  5.58581102,  5.64489978,
        5.70166627,  5.76054382,  5.81761053,  5.87385801,  5.92747273,
        5.97918154,  6.02969154,  6.07838854,  6.12815972,  6.18070837,
        6.22839621,  6.2755012 ,  6.32178685,  6.36736704,  6.4125118 ,
        6.45781223,  6.50218969,  6.54435411,  6.58450347,  6.62709852,
        6.67231228,  6.71392851,  6.756062  ,  6.7974904 ,  6.83724934,
        6.87540668,  6.91482968,  6.95402433,  6.99280185,  7.03160299,
        7.07080224,  7.10889719,  7.14609387,  7.18312933,  7.2203493 ,
        7.25870305,  7.29574517,  7.33155717,  7.36530218,  7.40058047,
        7.43659311,  7.47264985,  7.50783787,  7.54299865,  7.57775646,
        7.6120194 ,  7.64592788,  7.67968056,  7.71326671,  7.74675721,
        7.78001576,  7.81301605,  7.84593131,  7.87862715,  7.91106167,
        7.94383764,  7.97614071,  8.00803282,  8.03972987,  8.07124642,
        8.1025873 ,  8.13371319,  8.16460467,  8.19542261,  8.22609922,
        8.25709679,  8.28750033,  8.31766535,  8.34796359,  8.37785224,
        8.40754947,  8.43714565,  8.46660153,  8.49583071,  8.52492967,
        8.55427688,  8.58308555,  8.61171598,  8.63973488,  8.66793537,
        8.69611365,  8.72462266,  8.75360217,  8.78152707,  8.80916296,
        8.83659443,  8.8638887 ,  8.89111046,  8.9181866 ,  8.94508399,
        8.97186887,  8.99857351,  9.02519803,  9.05180641,  9.07812324,
        9.10436569,  9.13083442,  9.15743657,  9.18325539,  9.20895341,
        9.2336791 ,  9.2581781 ,  9.2834826 ,  9.30880238,  9.33431205,
        9.35991344,  9.38479927,  9.4095977 ,  9.43442944,  9.45907728,
        9.48352764,  9.50792219,  9.53299235,  9.55772826,  9.58175268,
        9.60566902,  9.62910127,  9.65227877,  9.6758303 ,  9.69935247,
        9.72255361,  9.7455964 ,  9.76882927,  9.79197204,  9.81520327,
        9.83892425,  9.86185393,  9.88462637,  9.90731604,  9.92996749,
        9.95252397,  9.97495129,  9.99728913, 10.01962384, 10.04218982,
       10.06432167, 10.08633002, 10.10817324, 10.12965725, 10.15123915,
       10.17296991, 10.19455601, 10.21624954, 10.23815485, 10.25959854,
       10.2808702 , 10.30216557, 10.3234877 , 10.34474483, 10.36583706,
       10.3867588 , 10.40765835, 10.42863877, 10.44945915, 10.47011209,
       10.49079925, 10.51132238, 10.5317333 , 10.55213068, 10.57256178,
       10.59284189, 10.61314646, 10.63339902, 10.65359291, 10.67364657,
       10.69370595, 10.71395816, 10.73447013, 10.75450951, 10.7743235 ,
       10.79402632, 10.8137081 , 10.83210977, 10.85151702, 10.87104515,
       10.89053055, 10.91045561, 10.93038627, 10.94992046, 10.96918846,
       10.98841016, 11.00766947, 11.02698458, 11.04609562, 11.06516843,
       11.08413915, 11.10312397, 11.12166909, 11.14037239, 11.15913081,
       11.17792627, 11.1967021 , 11.21575714, 11.23462661, 11.25320928,
       11.2717814 , 11.29027663, 11.30883541, 11.32741796, 11.34581171,
       11.36414554, 11.38245145, 11.40071679, 11.41877789, 11.4369266 ,
       11.45503111, 11.47316613, 11.49120357, 11.50925704, 11.52725695,
       11.54520619, 11.56315214, 11.58100548, 11.59895681, 11.61708843,
       11.63497963, 11.65270118, 11.67038535, 11.68803224, 11.70555913,
       11.72286518, 11.74034928, 11.75784746, 11.77530901, 11.79277108,
       11.81031759, 11.82783357, 11.84519072, 11.86247047, 11.87971405,
       11.89692147, 11.91440638, 11.931712  , 11.94878371, 11.9658899 ,
       11.98292009, 11.9998133 , 12.01596768, 12.03288828, 12.04977123,
       12.06661857, 12.08347127, 12.10048868, 12.11775946, 12.13460249,
       12.15127243, 12.16790665, 12.18450516, 12.20106794, 12.21754554,
       12.23398636, 12.25048892, 12.26686166, 12.28328938, 12.29957527,
       12.3156985 , 12.33192815, 12.34816864, 12.36437274, 12.38049267,
       12.39685337, 12.41358562, 12.42967801, 12.44565656, 12.46169016,
       12.47764207, 12.49347852, 12.50905092, 12.52469729, 12.54052868,
       12.55627652, 12.57204066, 12.58773031, 12.60358465, 12.61955444,
       12.63517677, 12.6507068 , 12.66625064, 12.68171525, 12.69716493,
       12.71251202, 12.72790812, 12.74326251, 12.75853787, 12.7738285 ,
       12.78905383, 12.80415416, 12.81925831, 12.83438769, 12.84948195,
       12.86454124, 12.87956564, 12.89459099, 12.90966006, 12.92459009,
       12.93950709, 12.95431757, 12.96913506, 12.98392937, 12.99880762,
       13.01393356, 13.02861537, 13.04325502, 13.0578406 , 13.07246308,
       13.08694553, 13.10122713, 13.11555645, 13.1299845 , 13.14444758,
       13.15884001, 13.17320149, 13.18754529, 13.2021331 , 13.21645164,
       13.23064263, 13.24490305, 13.25908538, 13.27323872, 13.28736385,
       13.30165357, 13.3158296 , 13.3298249 , 13.34384136, 13.35783345,
       13.37184448, 13.38573365, 13.39959566, 13.41339363, 13.42726158,
       13.44110657, 13.45492892, 13.46868036, 13.48250569, 13.49635982,
       13.51010487, 13.52382383, 13.537524  , 13.55120616, 13.56487094,
       13.57851903, 13.5921512 , 13.60584918, 13.61943096, 13.63300983,
       13.64662454, 13.66016243, 13.67370329, 13.68728226, 13.70090112,
       13.714419  , 13.7279577 , 13.74148323, 13.75495335, 13.7684749 ,
       13.78198715, 13.79562483, 13.80925046, 13.8227696 , 13.83626408,
       13.84976071, 13.86326073])
spectrum=np.array([0.0036541 , 0.00348172, 0.00340896, 0.00342242, 0.0037595 ,
       0.00345531, 0.00383431, 0.00360448, 0.00366266, 0.0038886 ,
       0.00357885, 0.00399642, 0.00379122, 0.00400488, 0.00355156,
       0.00359617, 0.00359257, 0.00358463, 0.00372282, 0.00375745,
       0.0035591 , 0.00361535, 0.00368659, 0.00364083, 0.00409492,
       0.00377684, 0.00378913, 0.00375609, 0.00357013, 0.00371876,
       0.00380465, 0.00364946, 0.00354048, 0.00359582, 0.00387358,
       0.00361921, 0.00355822, 0.0035592 , 0.00369155, 0.0035302 ,
       0.00387922, 0.00356649, 0.00376217, 0.00368803, 0.00395021,
       0.00360989, 0.00371551, 0.00365648, 0.00399155, 0.00384997,
       0.00391246, 0.0037991 , 0.00367815, 0.00363227, 0.00381087,
       0.00369292, 0.00368353, 0.00370507, 0.00408755, 0.00433348,
       0.00367046, 0.00399749, 0.00369225, 0.00397212, 0.00375036,
       0.00366714, 0.00390856, 0.00375279, 0.00366024, 0.00358687,
       0.00371173, 0.0039865 , 0.00389996, 0.00391857, 0.00356322,
       0.00383979, 0.00382526, 0.00381716, 0.00359089, 0.00365409,
       0.00373791, 0.00386306, 0.00365223, 0.00375565, 0.00408338,
       0.00373666, 0.00356755, 0.00363312, 0.00370412, 0.00356893,
       0.00375199, 0.00351172, 0.0035367 , 0.00347473, 0.00354144,
       0.00352555, 0.00341865, 0.00347   , 0.00358145, 0.00349004,
       0.0036081 , 0.00349337, 0.00373192, 0.00344548, 0.0034747 ,
       0.0034155 , 0.00368012, 0.00350893, 0.00346946, 0.00351478,
       0.00342197, 0.00339691, 0.00342336, 0.00390935, 0.00346853,
       0.00344202, 0.00363908, 0.00343554, 0.00341854, 0.00338815,
       0.00352168, 0.00347531, 0.00344898, 0.00361002, 0.00345187,
       0.00343412, 0.00338271, 0.00339934, 0.00350912, 0.00342748,
       0.00342149, 0.00341655, 0.00338586, 0.00334059, 0.0033454 ,
       0.00337105, 0.00341281, 0.00405599, 0.00341753, 0.0035071 ,
       0.00336036, 0.00335813, 0.00345304, 0.00335728, 0.00336106,
       0.00343312, 0.0034872 , 0.0035068 , 0.00337229, 0.00334065,
       0.00334177, 0.00334087, 0.00349131, 0.00335733, 0.0033724 ,
       0.00340846, 0.00342176, 0.00346161, 0.00357336, 0.00363186,
       0.00359443, 0.00354154, 0.0036307 , 0.0034831 , 0.00351093,
       0.003466  , 0.00347891, 0.00351852, 0.003438  , 0.00350502,
       0.00346876, 0.00341899, 0.00345955, 0.00356287, 0.00357817,
       0.00349418, 0.00355864, 0.00358511, 0.00375218, 0.00366295,
       0.00349306, 0.0034955 , 0.00347397, 0.0035211 , 0.00344278,
       0.00345555, 0.00371016, 0.00383664, 0.00345111, 0.00354047,
       0.0034546 , 0.00352079, 0.00343785, 0.00341505, 0.00348045,
       0.0033973 , 0.00347374, 0.00335834, 0.0034713 , 0.00340205,
       0.00343413, 0.0034155 , 0.00347018, 0.00345565, 0.00348034,
       0.00347779, 0.00343528, 0.00335998, 0.003421  , 0.00334589,
       0.00341296, 0.00343593, 0.003444  , 0.00333631, 0.00335724,
       0.00344544, 0.00351255, 0.00338955, 0.00345122, 0.00356912,
       0.0034196 , 0.00343717, 0.00337001, 0.00336512, 0.00341477,
       0.00342599, 0.00340722, 0.00336956, 0.00338676, 0.00347245,
       0.00356585, 0.00348787, 0.00344175, 0.00341786, 0.00375017,
       0.00344549, 0.00339447, 0.00341546, 0.00342416, 0.00338173,
       0.00340028, 0.00335345, 0.00337411, 0.00348611, 0.00346366,
       0.00347742, 0.00342786, 0.00344622, 0.00345235, 0.00341254,
       0.00342953, 0.00378086, 0.00351991, 0.00342392, 0.00335922,
       0.00345583, 0.00335659, 0.00341339, 0.00352624, 0.00338447,
       0.00341194, 0.00350529, 0.00383456, 0.00351094, 0.00350214,
       0.00349429, 0.00339125, 0.00350256, 0.00341022, 0.00353273,
       0.00355001, 0.00346707, 0.00351033, 0.00362774, 0.0034219 ,
       0.00340305, 0.0033779 , 0.00343486, 0.00385668, 0.00351975,
       0.00346486, 0.00341859, 0.00349226, 0.00351306, 0.00338935,
       0.0034386 , 0.00336835, 0.00338362, 0.00350753, 0.00349552,
       0.00352695, 0.00356044, 0.0034749 , 0.00363346, 0.00350202,
       0.00343244, 0.00342178, 0.00345513, 0.00345869, 0.00350078,
       0.00346522, 0.00347603, 0.00347301, 0.00339824, 0.00342196,
       0.00336339, 0.00341618, 0.00347361, 0.00353672, 0.00338458,
       0.00352326, 0.00350923, 0.00351682, 0.00342041, 0.0034523 ,
       0.00345644, 0.00339401, 0.0034794 , 0.00350041, 0.00347985,
       0.0034184 , 0.00344356, 0.00340649, 0.0033734 , 0.00352179,
       0.0035006 , 0.00342041, 0.00342237, 0.00349362, 0.00345026,
       0.00344537, 0.00345746, 0.00341914, 0.00340205, 0.00350143,
       0.00345008, 0.00359402, 0.00343331, 0.00357548, 0.00362576,
       0.00350098, 0.00348782, 0.00350684, 0.0035045 , 0.00344732,
       0.00344832, 0.00346036, 0.00344534, 0.00340212, 0.00344204,
       0.00347464, 0.0033799 , 0.00351745, 0.00345761, 0.00337663,
       0.00346301, 0.00344216, 0.00339354, 0.00355604, 0.00338802,
       0.0036005 , 0.00363892, 0.00351592, 0.00346136, 0.00345873,
       0.00345941, 0.00343122, 0.00349873, 0.00343938, 0.00339681,
       0.00342502, 0.00350344])
error=np.array([1.13635098e-04, 1.00877963e-04, 9.82153849e-05, 9.84601375e-05,
       9.99533807e-05, 1.01343809e-04, 1.02862188e-04, 1.04365301e-04,
       1.06958569e-04, 1.09626577e-04, 1.11655499e-04, 1.13740537e-04,
       1.14474313e-04, 1.13460004e-04, 1.13745346e-04, 1.16029965e-04,
       1.18998743e-04, 1.21229827e-04, 1.22007144e-04, 1.22170753e-04,
       1.22997373e-04, 1.24096233e-04, 1.24747443e-04, 1.25336961e-04,
       1.26798310e-04, 1.29673953e-04, 1.33457757e-04, 1.36746224e-04,
       1.38043445e-04, 1.37714821e-04, 1.38559160e-04, 1.42094287e-04,
       1.46086494e-04, 1.47581742e-04, 1.47679460e-04, 1.49045373e-04,
       1.51997676e-04, 1.55135726e-04, 1.57344914e-04, 1.59156532e-04,
       1.60833790e-04, 1.61365949e-04, 1.60637950e-04, 1.60295195e-04,
       1.60978999e-04, 1.62662639e-04, 1.64492600e-04, 1.66060959e-04,
       1.67961304e-04, 1.70490210e-04, 1.72963813e-04, 1.75248692e-04,
       1.77310228e-04, 1.79060920e-04, 1.80879976e-04, 1.83239776e-04,
       1.85865219e-04, 1.88577553e-04, 1.91029476e-04, 1.92633023e-04,
       1.94116335e-04, 1.96296547e-04, 1.98901576e-04, 2.00804433e-04,
       2.02364292e-04, 2.04178900e-04, 2.06282301e-04, 2.08842748e-04,
       2.12253522e-04, 2.16286219e-04, 2.19250142e-04, 2.19883036e-04,
       2.19581715e-04, 2.20189898e-04, 2.21836391e-04, 2.23733562e-04,
       2.25851235e-04, 2.27941794e-04, 2.29791974e-04, 2.31671232e-04,
       2.34326497e-04, 2.37500521e-04, 2.39718724e-04, 2.40260111e-04,
       2.40655642e-04, 2.42376574e-04, 2.44545653e-04, 2.45719594e-04,
       2.46005030e-04, 2.46616653e-04, 2.47998174e-04, 2.50104087e-04,
       2.52886921e-04, 2.56335891e-04, 2.59525364e-04, 2.61633648e-04,
       2.62919519e-04, 2.64219279e-04, 2.66399198e-04, 2.70252620e-04,
       2.75485560e-04, 2.80408866e-04, 2.83479736e-04, 2.85503288e-04,
       2.87670283e-04, 2.90426413e-04, 2.93377309e-04, 2.96255201e-04,
       2.98806780e-04, 3.01474815e-04, 3.04728984e-04, 3.08229232e-04,
       3.11550577e-04, 3.14618599e-04, 3.17902285e-04, 3.21840459e-04,
       3.27376949e-04, 3.33913841e-04, 3.38934986e-04, 3.41266208e-04,
       3.41860769e-04, 3.41915693e-04, 3.41891384e-04, 3.42627680e-04,
       3.45290810e-04, 3.49979067e-04, 3.56217726e-04, 3.63644652e-04,
       3.71825006e-04, 3.79478839e-04, 3.85130645e-04, 3.88999522e-04,
       3.92332998e-04, 3.95330221e-04, 3.97091380e-04, 3.97608224e-04,
       3.98362039e-04, 4.00578323e-04, 4.04628604e-04, 4.08979462e-04,
       4.13233161e-04, 4.17644505e-04, 4.23015869e-04, 4.30003042e-04,
       4.38446888e-04, 4.47230898e-04, 4.54746591e-04, 4.60510625e-04,
       4.65809302e-04, 4.71829126e-04, 4.78254744e-04, 4.83869438e-04,
       4.88160866e-04, 4.92002644e-04, 4.96593438e-04, 5.02975842e-04,
       5.10966551e-04, 5.19277011e-04, 5.27327379e-04, 5.36462471e-04,
       5.48257110e-04, 5.62666060e-04, 5.78735731e-04, 5.95815340e-04,
       6.11941514e-04, 6.24154946e-04, 6.31671515e-04, 6.37997678e-04,
       6.47243327e-04, 6.60196657e-04, 6.75399636e-04, 6.91127215e-04,
       7.05895327e-04, 7.18618846e-04, 7.30110030e-04, 7.42998452e-04,
       7.58832696e-04, 7.76541499e-04, 7.93594975e-04, 8.08562247e-04,
       8.21056046e-04, 8.31865145e-04, 8.43024477e-04, 8.55805011e-04,
       8.69543326e-04, 8.82778553e-04, 8.95593208e-04, 9.08768891e-04,
       9.21948333e-04, 9.34924264e-04, 9.51565714e-04, 9.75235592e-04,
       1.00364149e-03, 1.02837734e-03, 1.04383647e-03, 1.05437696e-03,
       1.06991808e-03, 1.09734396e-03, 1.13417295e-03, 1.17031123e-03,
       1.19471557e-03, 1.20594624e-03, 1.21262867e-03, 1.22452689e-03,
       1.24423183e-03, 1.26656737e-03, 1.28359323e-03, 1.29171409e-03,
       1.29569920e-03, 1.30470115e-03, 1.32243480e-03, 1.34407304e-03,
       1.36314034e-03, 1.38196975e-03, 1.40923381e-03, 1.44754005e-03,
       1.48760244e-03, 1.51823195e-03, 1.53801430e-03, 1.55421231e-03,
       1.57185599e-03, 1.59086537e-03, 1.61096800e-03, 1.63043239e-03,
       1.64412176e-03, 1.64913454e-03, 1.65292550e-03, 1.66968693e-03,
       1.70695678e-03, 1.75785075e-03, 1.80734817e-03, 1.84569461e-03,
       1.87688404e-03, 1.91433680e-03, 1.96813652e-03, 2.03607034e-03,
       2.09848403e-03, 2.13613928e-03, 2.15240741e-03, 2.17404238e-03,
       2.22484656e-03, 2.30564133e-03, 2.39809230e-03, 2.48567568e-03,
       2.56563466e-03, 2.63952536e-03, 2.70799125e-03, 2.78256588e-03,
       2.88921625e-03, 3.04138695e-03, 3.20593161e-03, 3.30984022e-03,
       3.31485904e-03, 3.26006448e-03, 3.21137594e-03, 3.19321354e-03,
       3.18848717e-03, 3.17034191e-03, 3.13621972e-03, 3.11046896e-03,
       3.12452814e-03, 3.19662949e-03, 3.31493161e-03, 3.43596838e-03,
       3.50672728e-03, 3.51800298e-03, 3.51318354e-03, 3.54477723e-03,
       3.63667849e-03, 3.77606476e-03, 3.92772237e-03, 4.05680676e-03,
       4.15292296e-03, 4.23893679e-03, 4.35479485e-03, 4.53339061e-03,
       4.78549852e-03, 5.07845049e-03, 5.32783719e-03, 5.44664895e-03,
       5.43519839e-03, 5.39765248e-03, 5.43565213e-03, 5.55665546e-03,
       5.67185811e-03, 5.68847135e-03, 5.62097633e-03, 5.56581055e-03,
       5.59331346e-03, 5.69637336e-03, 5.81333314e-03, 5.90559822e-03,
       6.01069413e-03, 6.20113702e-03, 6.49305569e-03, 6.76943952e-03,
       6.83557042e-03, 6.62801007e-03, 6.29715627e-03, 6.03018145e-03,
       5.91764104e-03, 5.97737505e-03, 6.22211366e-03, 6.67199404e-03,
       7.29275207e-03, 7.89630960e-03, 8.16793459e-03, 7.97702169e-03,
       7.55434751e-03, 7.21901227e-03, 7.13698166e-03, 7.32628147e-03,
       7.68728943e-03, 8.00789164e-03, 8.05542182e-03, 7.80220015e-03,
       7.48768859e-03, 7.40297724e-03, 7.73237533e-03, 8.52827830e-03,
       9.65408697e-03, 1.07183348e-02, 1.13329686e-02, 1.15413395e-02,
       1.16786206e-02, 1.19200882e-02, 1.21209892e-02, 1.19895461e-02,
       1.13969921e-02, 1.05010991e-02, 9.58348347e-03, 8.87866130e-03,
       8.54436440e-03, 8.67695324e-03, 9.31497921e-03, 1.03550348e-02,
       1.14313971e-02, 1.21199285e-02, 1.25086496e-02, 1.32819271e-02,
       1.53075354e-02, 1.96551300e-02, 2.75107951e-02, 3.71940997e-02,
       3.91337063e-02, 3.12936934e-02, 2.35829775e-02, 1.93273692e-02,
       1.77261270e-02, 1.75738378e-02, 1.75474692e-02, 1.67449791e-02,
       1.56433837e-02, 1.53136433e-02, 1.63169916e-02, 1.84256015e-02,
       2.01906913e-02, 1.99728286e-02, 1.84896368e-02, 1.74542100e-02,
       1.75074427e-02, 1.84324775e-02, 1.95549094e-02, 2.01294493e-02,
       1.98877546e-02, 1.91732663e-02, 1.86273642e-02, 1.89105987e-02,
       2.07338582e-02, 2.51564156e-02, 3.42667713e-02, 5.26696345e-02])
w=[]
s=[]
e=[]
n=5
for i in range(len(wave)):
    if i%n==0:
        if i>0:   
            ave_wave=sum(wave[i-n:i])/n
            #print(len(wave[i-n:i]))
            #print(wave[i-n:i])
            ave_spec=sum(spectrum[i-n:i])/n
            ave_error=sum(error[i-n:i])/n
            w.append(ave_wave)
            s.append(ave_spec)
            e.append(ave_error)
#plt.plot(w,s,'.')
plt.plot(wave,spectrum,'.')





#JWST NIRSpec G140H f070lp SUB 2048 TOI-771b 1 pixel
pickleFile = open("ETC-calculation-TOI771b-JWST-G140H-f070lp-NIRSpec-1pixel.p","rb")

obj = pd.read_pickle(pickleFile)
np.set_printoptions(threshold=sys.maxsize)
#print (obj['FinalSpectrum'])
wave=obj['FinalSpectrum']['wave']
spectrum=obj['FinalSpectrum']['spectrum']
error=obj['FinalSpectrum']['error_w_floor']

#plt.figure(figsize=(15,9))
w=[]
s=[]
e=[]
n=50
for i in range(len(wave)):
    if i%n==0:
        if i>0:   
            ave_wave=sum(wave[i-n:i])/n
            #print(len(wave[i-n:i]))
            #print(wave[i-n:i])
            ave_spec=sum(spectrum[i-n:i])/n
            ave_error=sum(error[i-n:i])/n
            w.append(ave_wave)
            s.append(ave_spec)
            e.append(ave_error)
#plt.errorbar(w,s,yerr=e,fmt='o')
#plt.xlim(0.8,1.5)
#plt.plot(wave,spectrum,'.')
plt.plot(w,s,'.')




#JWST NIRSpec G140H f100lp SUB 2048 TOI-771b 1 pixel
pickleFile = open("ETC-calculation-TOI771b-JWST-G140H-f100lp-NIRSpec-1pixel.p","rb")

obj = pd.read_pickle(pickleFile)
np.set_printoptions(threshold=sys.maxsize)
#print (obj['FinalSpectrum'])
wave=obj['FinalSpectrum']['wave']
spectrum=obj['FinalSpectrum']['spectrum']
error=obj['FinalSpectrum']['error_w_floor']
#plt.figure(figsize=(15,9))
w=[]
s=[]
e=[]
n=100
for i in range(len(wave)):
    if i%n==0:
        if i>0:   
            ave_wave=sum(wave[i-n:i])/n
            #print(len(wave[i-n:i]))
            #print(wave[i-n:i])
            ave_spec=sum(spectrum[i-n:i])/n
            ave_error=sum(error[i-n:i])/n
            w.append(ave_wave)
            s.append(ave_spec)
            e.append(ave_error)
#plt.errorbar(w,s,yerr=e,fmt='o')

#plt.plot(wave,spectrum,'.')
plt.plot(w,s,'.')




#JWST NIRSpec G235M f170lp SUB 2048 TOI-771b 1 pixel
pickleFile1 = open("ETC-calculation-TOI771b-JWST-G235M-f170lp-NIRSpec-1pixel.p","rb")

obj1 = pd.read_pickle(pickleFile1)
#np.set_printoptions(threshold=sys.maxsize)
#print (obj['FinalSpectrum'])
wave=obj1['FinalSpectrum']['wave']
spectrum=obj1['FinalSpectrum']['spectrum']
error=obj1['FinalSpectrum']['error_w_floor']
#plt.figure(figsize=(15,9))
w=[]
s=[]
e=[]
n=100
#print(len(wave))
for i in range(len(wave)):
    if i%n==0:
        if i>0:   
            ave_wave=sum(wave[i-n:i])/n
            #print(len(wave[i-n:i]))
            #print(wave[i-n:i])
            ave_spec=sum(spectrum[i-n:i])/n
            ave_error=sum(error[i-n:i])/n
            w.append(ave_wave)
            s.append(ave_spec)
            e.append(ave_error)
#plt.errorbar(w,s,yerr=e,fmt='o')

#plt.scatter(wave,spectrum)
plt.plot(w,s,'.')









#JWST NIRSpec G395H f290lp SUB 2048 TOI-771b 1 pixel
pickleFile1 = open("ETC-calculation-TOI771b-JWST-G395H-f290lp-NIRSpec-1pixel.p","rb")

obj1 = pd.read_pickle(pickleFile1)
#np.set_printoptions(threshold=sys.maxsize)
#print (obj['FinalSpectrum'])
wave=obj1['FinalSpectrum']['wave']
spectrum=obj1['FinalSpectrum']['spectrum']
error=obj1['FinalSpectrum']['error_w_floor']
#plt.figure(figsize=(15,9))
w=[]
s=[]
e=[]
n=100
#print(len(wave))
for i in range(len(wave)):
    if i%n==0:
        if i>0:   
            ave_wave=sum(wave[i-n:i])/n
            #print(len(wave[i-n:i]))
            #print(wave[i-n:i])
            ave_spec=sum(spectrum[i-n:i])/n
            ave_error=sum(error[i-n:i])/n
            w.append(ave_wave)
            s.append(ave_spec)
            e.append(ave_error)
#plt.errorbar(w,s,yerr=e,fmt='o')

#plt.scatter(wave,spectrum)
plt.scatter(w,s,color='red')




#JWST NIRCam F322W2 TOI-771b 1 pixel
pickleFile1 = open("ETC-calculation-TOI771b-JWST-F322W2-NIRCam-1pixel.p","rb")

obj1 = pd.read_pickle(pickleFile1)
#np.set_printoptions(threshold=sys.maxsize)
#print (obj['FinalSpectrum'])
wave=obj1['FinalSpectrum']['wave']
spectrum=obj1['FinalSpectrum']['spectrum']
error=obj1['FinalSpectrum']['error_w_floor']
#plt.figure(figsize=(15,9))
w=[]
s=[]
e=[]
n=100
#print(len(wave))
for i in range(len(wave)):
    if i%n==0:
        if i>0:   
            ave_wave=sum(wave[i-n:i])/n
            #print(len(wave[i-n:i]))
            #print(wave[i-n:i])
            ave_spec=sum(spectrum[i-n:i])/n
            ave_error=sum(error[i-n:i])/n
            w.append(ave_wave)
            s.append(ave_spec)
            e.append(ave_error)
#plt.errorbar(w,s,yerr=e,fmt='o')

#plt.scatter(wave,spectrum)
plt.plot(w,s,'.')



#JWST NIRCam F444W TOI-771b 1 pixel
pickleFile1 = open("ETC-calculation-TOI771b-JWST-F444W-NIRCam-1pixel.p","rb")

obj1 = pd.read_pickle(pickleFile1)
#np.set_printoptions(threshold=sys.maxsize)
#print (obj['FinalSpectrum'])
wave=obj1['FinalSpectrum']['wave']
spectrum=obj1['FinalSpectrum']['spectrum']
error=obj1['FinalSpectrum']['error_w_floor']
#plt.figure(figsize=(15,9))
w=[]
s=[]
e=[]
n=100
#print(len(wave))
for i in range(len(wave)):
    if i%n==0:
        if i>0:   
            ave_wave=sum(wave[i-n:i])/n
            #print(len(wave[i-n:i]))
            #print(wave[i-n:i])
            ave_spec=sum(spectrum[i-n:i])/n
            ave_error=sum(error[i-n:i])/n
            w.append(ave_wave)
            s.append(ave_spec)
            e.append(ave_error)
#plt.errorbar(w,s,yerr=e,fmt='o')

#plt.scatter(wave,spectrum)
plt.plot(w,s,'.')



#JWST NIRISS Sub256 TOI-771b 1 pixel
pickleFile1 = open("ETC-calculation-TOI771b-JWST-Sub256-NIRISS-1pixel.p","rb")

obj1 = pd.read_pickle(pickleFile1)
#np.set_printoptions(threshold=sys.maxsize)
#print (obj['FinalSpectrum'])
wave=obj1['FinalSpectrum']['wave']
spectrum=obj1['FinalSpectrum']['spectrum']
error=obj1['FinalSpectrum']['error_w_floor']
#plt.figure(figsize=(15,9))
w=[]
s=[]
e=[]
n=100
#print(len(wave))
for i in range(len(wave)):
    if i%n==0:
        if i>0:   
            ave_wave=sum(wave[i-n:i])/n
            #print(len(wave[i-n:i]))
            #print(wave[i-n:i])
            ave_spec=sum(spectrum[i-n:i])/n
            ave_error=sum(error[i-n:i])/n
            w.append(ave_wave)
            s.append(ave_spec)
            e.append(ave_error)
#plt.errorbar(w,s,yerr=e,fmt='o')

#plt.scatter(wave,spectrum)
plt.plot(w,s,'.')



plt.legend(fontsize=15)

